<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd

       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd



">

    <!--====================================spring配置文件======================================-->
    <context:component-scan base-package="com.atguigu.crud">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--数据源-->
    <util:properties id="config" location="classpath:db.properties"></util:properties>
    <bean id="DruidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="#{config.driverClassName}"/>
        <property name="url" value="#{config.url}"/>
        <property name="username" value="#{config.username}"/>
        <property name="password" value="#{config.password}"/>
    </bean>

    <!--=====================================配置和mybatis的整合=====================================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mybatis全局配置位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--引入数据源-->
        <property name="dataSource" ref="DruidDataSource"></property>
        <!--指定mybatis的mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--配置扫描器，将mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口实现，加入放到ioc容器中-->
        <property name="basePackage" value="com.atguigu.crud.dao"></property>
    </bean>


    <!--========================================配置执行批量的sqlSession==============================-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>

    </bean>


    <!--==========================================事务控制的配置===========================-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="DruidDataSource"></property>
    </bean>

    <!--开启基于注解的事务，使用xml配置形式的事务-->
    <aop:config>
        <!--切入点表达式-->
        <aop:pointcut expression="execution(* com.atguigu.crud.service..*.*(..))" id="txPoint"/>
        <!--配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!--配置事务增强，事务如何切入-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--*代表所有的方法都是事务方法-->
            <tx:method name="*"/>
            <!--以get开头的所有方法,认为是查询，优化只读-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>



    <!--spring配置文件的核心点（数据源，与mybatis整合，事务控制）-->

</beans>